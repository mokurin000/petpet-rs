# Origin config by @Kilerd

name: Build Canary Version

on:
  push:
    branches: [ master ]

jobs:
  release:
    name: Release on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform: [macos-x86_64, linux_glibc, linux_musl-x86_64, linux_musl-i686,  windows-i686, windows-x86_64]
        include:
        
          - platform: macos-x86_64
            target: x86_64-apple-darwin
            os: macos-latest
            bin: petpet

          - platform: linux_glibc
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin: petpet
            
          - platform: linux_musl-x86_64
            target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin: petpet
        
          - platform: linux_musl-i686
            target: i686-unknown-linux-musl
            os: ubuntu-latest
            bin: petpet
            
          - platform: windows-i686
            target: i686-pc-windows-msvc
            os: windows-latest
            bin: petpet.exe
            
          - platform: windows-x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: petpet.exe
            
    steps:
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: nightly
          override: true

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Run code build
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare assets
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ ${{ matrix.target }} != x86_64-apple-darwin ]]
          then strip ${{ matrix.bin }}
          fi
          mv ${{ matrix.bin }} ${{ matrix.target }}-${{ matrix.bin }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.target }}-${{ matrix.bin }}
          
      - name: Declare some variables # https://stackoverflow.com/a/61699863
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          
          if [[ "${{ github.event.head_commit.message }}" == "\[res]*" ]]
          then echo "::set-output name=push_release::true"
          else echo "::set-output name=push_release::false"
          fi
          
          if [[ "${{ github.event.head_commit.message }}" == "\[pre]*" ]]
          then echo "::set-output name=push_pre-release::true"
          else echo "::set-output name=push_pre-release::false"
          fi

      - name: Pre-Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.vars.outputs.push_pre-release }} == "true"
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.target }}-${{ matrix.bin }}
          tag_name: 2.0.1-${{ steps.vars.outputs.sha_short }}
          prerelease: true


      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.vars.outputs.push_release }} == "true"
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.target }}-${{ matrix.bin }}
          tag_name: 2.0.1-${{ steps.vars.outputs.sha_short }}
          prerelease: false
